{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "WebFetch(domain:gitlab.com)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "WebFetch(domain:cockpit-project.org)",
      "Bash(cockpit-bridge:*)",
      "Bash(npm update)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(rm:*)",
      "Bash(npm update:*)",
      "Bash(make:*)",
      "Bash(find:*)",
      "Bash(npm run build:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(ln:*)",
      "Bash(systemctl:*)",
      "Bash(sudo systemctl restart:*)",
      "Bash(cp:*)",
      "Bash(curl:*)",
      "Bash(sudo rm:*)",
      "Bash(sudo:*)",
      "Bash(apt search:*)",
      "Bash(samba-tool domain info:*)",
      "Bash(samba-tool gpo:*)",
      "Bash(realm list:*)",
      "Bash(apt list:*)",
      "Bash(dpkg:*)",
      "Bash(/usr/sbin/realm:*)",
      "Bash(klist:*)",
      "Bash(kinit:*)",
      "Bash(sed:*)",
      "Bash(/home/administrator/Documents/ad-server/samba-ad-dc/fix-create-user.sh:*)",
      "WebFetch(domain:www.patternfly.org)",
      "Bash(python3:*)",
      "Bash(rg:*)",
      "Bash(samba-tool dns zonelist:*)",
      "Bash(cat:*)",
      "Bash(host:*)",
      "Bash(journalctl:*)",
      "Bash(samba-tool domain:*)",
      "Bash(pkill:*)",
      "Bash(samba-tool user:*)",
      "Bash(samba-tool computer:*)",
      "Bash(samba-tool group:*)",
      "Bash(samba-tool ou:*)",
      "Bash(zcat:*)",
      "Bash(samba-tool dns:*)",
      "Bash(node:*)",
      "Bash(./install-package.sh:*)",
      "Bash(true)",
      "Bash(tower:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(gzip:*)",
      "Bash(gunzip:*)",
      "Bash(samba-tool sites:*)",
      "Bash(telnet:*)",
      "Bash(nmap:*)",
      "Bash(nc:*)",
      "Bash(ping:*)",
      "Bash(./update-package.sh)",
      "Bash(apt-cache depends:*)",
      "Bash(./update-package.sh:*)",
      "Bash(samba-tool fsmo:*)",
      "Bash(runuser:*)",
      "Bash(echo:*)",
      "Bash(ip route:*)",
      "Bash(./dhcp-fsmo-manager.sh:*)",
      "Bash(chown:*)",
      "Bash(dhcpd:*)",
      "Bash(/usr/sbin/dhcpd:*)",
      "Bash(dmesg:*)",
      "Bash(/usr/local/bin/dhcp-fsmo-manager.sh:*)",
      "Bash(/tmp/dhcp-sync-wrapper.sh:*)",
      "Bash(diff:*)",
      "Bash(/tmp/test-dhcp-fsmo-manager.sh:*)",
      "Bash(/tmp/test-dhcp-fsmo-manager-v2.sh:*)",
      "Bash(/tmp/test-dhcp-fsmo-manager-v3.sh:*)",
      "Bash(nslookup:*)",
      "Bash(chrony sources:*)",
      "Bash(timedatectl:*)",
      "Bash(samba-tool:*)",
      "Bash(net ads:*)",
      "Bash(nltest:*)",
      "Bash(wbinfo:*)",
      "Bash(/usr/share/samba/is-configured:*)",
      "WebFetch(domain:wiki.samba.org)",
      "WebFetch(domain:www.samba.org)",
      "Bash(getent:*)",
      "Bash(for:*)",
      "Bash(do if grep -q firewalld \"$file\")",
      "Bash(then echo \"Found in: $file\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(ldapsearch:*)",
      "Bash(/home/dguedry/Documents/ad-server/cockpit-domain-controller/fsmo-seize.sh:*)",
      "Bash(groups)",
      "Bash(./ntp-fsmo-manager.sh:*)",
      "Bash(./cleanup-obsolete-files.sh:*)",
      "Bash(bash:*)",
      "Bash(timeout:*)",
      "Bash(/home/dguedry/Documents/ad-server/cockpit-domain-controller/fsmo-orchestrator.sh:*)",
      "Bash(/tmp/test-priority-system.sh:*)",
      "Bash(/tmp/test-priority-functions.sh:*)",
      "Bash(/tmp/test-fsmo-fixes.sh:*)",
      "Bash(/tmp/test-fsmo-query.sh:*)",
      "Bash(/tmp/test-query-function.sh:*)",
      "Bash(./run-all-tests.sh:*)",
      "Bash(dig:*)",
      "Bash(resolvectl:*)",
      "Bash(source:*)",
      "Bash(discover_domain_controllers)",
      "Bash(configure_samba_dns:*)",
      "Bash(/dev/null)",
      "Bash(basename:*)",
      "Bash(./build-package.sh:*)",
      "Bash(/tmp/generate-domain-dhcp.sh:*)",
      "Bash(remove_conflicting_time_services)",
      "Bash(/tmp/test-conflict-detection.sh:*)",
      "Bash(/tmp/test-args.sh:*)",
      "Bash(/tmp/debug-test-runner.sh:*)",
      "Bash(/tmp/test-shift.sh:*)",
      "Bash(printf:*)",
      "Bash(do echo \"[$arg]\")",
      "Bash(/tmp/debug-args.sh:*)"
    ],
    "deny": []
  }
}